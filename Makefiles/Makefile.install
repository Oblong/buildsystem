# -*- Makefile -*-

# DIST_ALL is the CONTENTS of all the DIST_... variables
DIST_ALL = $(foreach t,$(DIST_TYPES),$($t))

# I want to allow wildcards in my DIST_... lists. Since some of the
# files in those lists are built, they may not exist at the time the
# Makefiles are read. I thus apply the wildcard to every element, but
# don't remove non-existing elements
$(foreach t,$(DIST_TYPES),$(eval $t := $(call soft-wildcard, $($t))))


# If I have a DAEMON_COMMAND, I define an upstart configuration
ifneq ($(DAEMON_COMMAND),)
#{{{{{{{{{{{{{{ making upstart conf
define _install_upstart_daemon
@perl -pe 's{^###.*}{}g; \
           s{\@NAME\@}{$(TARGET_NAME)}g; \
           s{\@COMMAND\@}{$(DAEMON_COMMAND)}g;' \
	appliance/upstart/template.conf > \
  $(DESTDIR_MAIN)/etc/init/oblong/$(TARGET_NAME).conf
endef
#}}}}}}}}}}}}}}
endif




# now the install rules. If the TARGET_NAME starts with 'lib', it's a
# library. Otherwise it's binaries. Libraries have -dev versions of
# their packages, have API_VERSIONs, and are allowed to have headers,
# .so, .a, etc. For each library I have 3 packages:
#
# liboblong-blahN    : main library, N is a number that gets bumped up with each API chage
# liboblong-blah-dev : devel files (.a, .h, .pc)
# liboblong-blahN-dbg: just the debug symbols



ifeq ($(TARGET_NAME:lib%=lib),lib)
#{{{{{{{{{{{{{{ library

PACKAGENAME_BASE := $(PACKAGENAME_BASE_LIB)
PACKAGENAME      := $(PACKAGENAME_BASE)$(API_VERSION)
DESTDIR_DEV      := debian/$(PACKAGENAME_BASE)-dev

#}}}}}}}}}}}}}}
else
#{{{{{{{{{{{{{{ binary package

PACKAGENAME_BASE := $(PACKAGENAME_BASE_BIN)
PACKAGENAME      := $(PACKAGENAME_BASE)
#}}}}}}}}}}}}}}
endif

DESTDIR_MAIN     := debian/$(PACKAGENAME)


# using 'cp -P' instead of 'install' because the latter follows links unconditionally
# BIN_TARGET is incorporated in DIST_BINS
$(dir)/install: $(LIB_TARGET_A) $(LIB_TARGET_SO) $(DIST_ALL)
ifeq ($(DESTDIR),)
	@echo Tried to make install without having DESTDIR defined
	@echo "make install" is ONLY for the debian package.
	@echo What are you trying to do?
	@false
endif
ifeq ($(TARGET_NAME:lib%=lib),lib)
	mkdir -p $(DESTDIR_MAIN)/usr/lib
	mkdir -p $(DESTDIR_DEV)/usr/lib

	cp -P $(LIB_TARGET_SO)  $(DESTDIR_MAIN)/usr/lib
	cp -P $(LIB_TARGET_A)   $(DESTDIR_DEV)/usr/lib
	ln -fs $(notdir $(LIB_TARGET_SO)) $(DESTDIR_MAIN)/usr/lib/$(notdir $(LIB_TARGET_SO_BARE)).$(API_VERSION)
	ln -fs $(notdir $(LIB_TARGET_SO)) $(DESTDIR_DEV)/usr/lib/$(notdir $(LIB_TARGET_SO_BARE))
endif
ifneq ($(DIST_BINS),)
	mkdir -p $(DESTDIR_MAIN)/usr/bin
	install -m 0755 $(DIST_BINS) $(DESTDIR_MAIN)/usr/bin/
endif
ifneq ($(DIST_HEADERS),)
	mkdir -p $(DESTDIR_DEV)/usr/include
	cp -P $(DIST_HEADERS) $(DESTDIR_DEV)/usr/include/
endif
ifneq ($(DIST_ETC_OBLONG),)
	mkdir -p $(DESTDIR_MAIN)/etc/oblong/$(TARGET_NAME)
	cp -P $(DIST_ETC_OBLONG) $(DESTDIR_MAIN)/etc/oblong/$(TARGET_NAME)
endif
ifneq ($(DIST_SHARE_OBLONG),)
	mkdir -p $(DESTDIR_MAIN)/usr/share/oblong
	cp -P $(DIST_SHARE_OBLONG) $(DESTDIR_MAIN)/usr/share/oblong
endif
ifneq ($(DIST_UPSTART),)
# This should use dh_installinit, but I think that only works with a single upstart file...
	mkdir -p $(DESTDIR_MAIN)/etc/init/oblong
	cp -P $(DIST_UPSTART) $(DESTDIR_MAIN)/etc/init/oblong
endif
ifneq ($(DIST_DOCS),)
	echo $(DIST_DOCS) | xargs -n1 > debian/$(PACKAGENAME).docs
endif
ifneq ($(DIST_MANS),)
	echo $(DIST_MANS) | xargs -n1 > debian/$(PACKAGENAME).manpages
endif
ifneq ($(DAEMON_COMMAND),)
	mkdir -p $(DESTDIR_MAIN)/etc/init/oblong
	$(_install_upstart_daemon)
endif


install: $(dir)/install
.PHONY: $(dir)/install

