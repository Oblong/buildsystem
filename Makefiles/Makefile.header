# -*- Makefile -*-

ifeq ($(dir),)
#{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{ directory-local build

include $(ROOT)/Makefile.defs

# we're building NOT from the root. poison the $(dir) (to declaw the user's makefile), and isssue a
# new make from the right directory
dir                := /DIR_poison
_make_will_recurse := 1

# I redo this make from the ROOT, re-pathing everything
.DEFAULT_GOAL := all
GOALSHERE     := $(or $(MAKECMDGOALS),$(.DEFAULT_GOAL))

# This rule makes whatever I was asked to make. It'll always run since it's phony also
$(MAKECMDGOALS) %:
	$(MAKE) -C $(ROOT) $(call relpath,$(GOALSHERE))

.PHONY: $(MAKECMDGOALS)

#}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}} directory-local build
else # ifeq ($(dir),)
#{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{ top-level build

# include the system-dependent variables and anything oblong-specific
include Makefile.sys

# QT stuff uses immediate variables for efficiency, so I must include
# these in the header, not the footer
include Makefile.qt

#}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}} top-level build
endif # ifeq ($(dir),)
