# -*- Makefile -*-

ifeq ($(dir),)

# ROOT is assumed to be absolute so I set that here
ROOT := $(abspath $(ROOT))

include $(ROOT)/Makefile.defs

# we're building NOT from the root. poison the $(dir) (to declaw the user's makefile), and isssue a
# new make from the right directory
dir          := /DIR_poison
nonroot_make := 1

# I redo this make from the ROOT. I re-path everything except 'install',
# since this is the only target that has no per-directory meaning
.DEFAULT_GOAL := all
GOALSHERE              := $(or $(MAKECMDGOALS),$(.DEFAULT_GOAL))

# This rule makes whatever I was asked to make. It'll always run since it's phony also
$(MAKECMDGOALS) %:
	$(MAKE) -C $(ROOT) $(call relpath,$(GOALSHERE))

.PHONY: $(MAKECMDGOALS)

else # ifeq ($(dir),)

# QT stuff uses immediate variables for efficiency, so I must include
# these in the header, not the footer
include Makefile.qt

endif # ifeq ($(dir),)
